function bello()
{
    if [ -e /usr/share/terminfo/x/xterm-256color ];
    then
        export TERM='xterm-256color'
    else
        export TERM='xterm-color'
    fi

    # For Public account server
    # export PATH=$HOME/Marslo/.vim/tools/bin:$PATH
    # source $HOME/Marslo/.alias_marslo_public

    # For private account server
    # source $HOME/.alias_marslo_linux

    # Color for ManPage
    export LESS_TERMCAP_mb=$(printf "\e[1;31m").
    export LESS_TERMCAP_md=$(printf "\e[1;31m").
    export LESS_TERMCAP_me=$(printf "\e[0m").
    export LESS_TERMCAP_se=$(printf "\e[0m").
    export LESS_TERMCAP_so=$(printf "\e[1;44;33m").
    export LESS_TERMCAP_ue=$(printf "\e[0m").
    export LESS_TERMCAP_us=$(printf "\e[1;32m").

}

# For git diff
# Inspired from http://stackoverflow.com/questions/8259851/using-git-diff-how-can-i-get-added-and-modified-lines-numbers
function diff-lines() {
    local path=
    local line=
    while read; do
        esc=$'\033'
        if [[ $REPLY =~ ---\ (a/)?.* ]]; then
            continue
        elif [[ $REPLY =~ \+\+\+\ (b/)?([^[:blank:]$esc]+).* ]]; then
            path=${BASH_REMATCH[2]}
        elif [[ $REPLY =~ @@\ -[0-9]+(,[0-9]+)?\ \+([0-9]+)(,[0-9]+)?\ @@.* ]]; then
            line=${BASH_REMATCH[2]}
        elif [[ $REPLY =~ ^($esc\[[0-9;]+m)*([\ +-]) ]]; then
            echo "$path:$line:$REPLY"
            if [[ ${BASH_REMATCH[2]} != - ]]; then
                ((line++))
            fi
        fi
    done
}


# For get git infor
function gitinfo() {
    # author: Duane Johnson
    # email: duane.johnson@gmail.com
    # date: 2008 Jun 12
    # license: MIT

    # Modified by Marslo
    # Email: marslo.vida@gmail.com
    # date: 2013-10-15 17:54:58

    # Based on discussion at http://kerneltrap.org/mailarchive/git/2007/11/12/406496

    pushd . >/dev/null

    # Find base of git directory
    while [ ! -d .git ] && [ ! `pwd` = "/" ]; do cd ..; done

    # Show various information about this git directory
    if [ -d .git ]; then
    echo "== Remote URL: "
    git remote -v
    echo

    echo "== Remote Branches: "
    git branch -r
    echo

    echo "== Local Branches:"
    git branch
    echo

    echo "== Configuration (.git/config)"
    cat .git/config
    echo

    echo "== Most Recent Commit"
    git plog --max-count=3
    echo

    echo "Type 'git log' for more commits, or 'git show' for full commit details."
    else
    echo "Not a git repository."
    fi

    popd >/dev/null
}
